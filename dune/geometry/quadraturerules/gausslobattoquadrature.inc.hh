// -*- tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
// vi: set et ts=4 sw=2 sts=2:
#ifndef DUNE_GEOMETRY_QUADRATURE_GAUSSLOBATTO_HH
#define DUNE_GEOMETRY_QUADRATURE_GAUSSLOBATTO_HH

#ifndef DUNE_INCLUDING_IMPLEMENTATION
#error This is a private header that should not be included directly.
#error Use #include <dune/geometry/quadraturerules.hh> instead.
#endif

namespace Dune {

  /************************************************
   * Quadraturerule for simplex
   *************************************************/

  /** \brief Quadrature rules for simplex
      \ingroup Quadrature
   */
  template<typename ct, int dim>
  class GausslobattoQuadratureRule;

  /** \brief Quadrature rules for simplex
      \ingroup Quadrature
   */
  template<typename ct>
  class GausslobattoQuadratureRule<ct, 1> : public QuadratureRule<ct, 1>
  {
  public:
    /** \brief The highest quadrature order available */
    enum { highest_order = 31 };
  private:
    friend class QuadratureRuleFactory<ct, 1>;
    GausslobattoQuadratureRule (int p);
    ~GausslobattoQuadratureRule() {}
  };

  template<typename ct>
  GausslobattoQuadratureRule<ct, 1>::GausslobattoQuadratureRule(int order)
    : QuadratureRule<ct, 1>(GeometryType(GeometryType::simplex, 1))
  {
    switch (order)
    {
      case 0:
      case 1:
        // Symmetric rule: dim = 1, order = 1, npoints = 2
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 1;
        this->reserve(2);
        this->insert(this->end(), {
          {
            { cast<ct>("0.0") },
            cast<ct>("0.5")
          },
          {
            { cast<ct>("1.0") },
            cast<ct>("0.5")
          }
        });
        break;

      case 2:
      case 3:
        // Symmetric rule: dim = 1, order = 3, npoints = 3
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 3;
        this->reserve(3);
        this->insert(this->end(), {
          {
            { cast<ct>("0.0") },
            cast<ct>("0.16666666666666666666666666666666666666666666666666666666666666666666666666666667")
          },
          {
            { cast<ct>("1.0") },
            cast<ct>("0.16666666666666666666666666666666666666666666666666666666666666666666666666666667")
          },
          {
            { cast<ct>("0.5") },
            cast<ct>("0.66666666666666666666666666666666666666666666666666666666666666666666666666666667")
          }
        });
        break;

      case 4:
      case 5:
        // Symmetric rule: dim = 1, order = 5, npoints = 4
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 5;
        this->reserve(4);
        this->insert(this->end(), {
          {
            { cast<ct>("0.0") },
            cast<ct>("0.083333333333333333333333333333333333333333333333333333333333333333333333333333333")
          },
          {
            { cast<ct>("1.0") },
            cast<ct>("0.083333333333333333333333333333333333333333333333333333333333333333333333333333333")
          },
          {
            { cast<ct>("0.72360679774997896964091736687312762354406183596115257242708972454105209256378049") },
            cast<ct>("0.41666666666666666666666666666666666666666666666666666666666666666666666666666667")
          },
          {
            { cast<ct>("0.27639320225002103035908263312687237645593816403884742757291027545894790743621951") },
            cast<ct>("0.41666666666666666666666666666666666666666666666666666666666666666666666666666667")
          }
        });
        break;

      case 6:
      case 7:
        // Symmetric rule: dim = 1, order = 7, npoints = 5
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 7;
        this->reserve(5);
        this->insert(this->end(), {
          {
            { cast<ct>("0.0") },
            cast<ct>("0.05")
          },
          {
            { cast<ct>("1.0") },
            cast<ct>("0.05")
          },
          {
            { cast<ct>("0.82732683535398857189914622812342917778460404119771227875766015170763345896769792") },
            cast<ct>("0.27222222222222222222222222222222222222222222222222222222222222222222222222222222")
          },
          {
            { cast<ct>("0.17267316464601142810085377187657082221539595880228772124233984829236654103230208") },
            cast<ct>("0.27222222222222222222222222222222222222222222222222222222222222222222222222222222")
          },
          {
            { cast<ct>("0.5") },
            cast<ct>("0.35555555555555555555555555555555555555555555555555555555555555555555555555555556")
          }
        });
        break;

      case 8:
      case 9:
        // Symmetric rule: dim = 1, order = 9, npoints = 6
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 9;
        this->reserve(6);
        this->insert(this->end(), {
          {
            { cast<ct>("1.0") },
            cast<ct>("0.033333333333333333333333333333333333333333333333333333333333333333333333333333333")
          },
          {
            { cast<ct>("0.0") },
            cast<ct>("0.033333333333333333333333333333333333333333333333333333333333333333333333333333333")
          },
          {
            { cast<ct>("0.11747233803526765357449851302033092481713215573194788033620882208147234148058674") },
            cast<ct>("0.18923747814892342322840362420574909078935141869643766166662560744765965934000132")
          },
          {
            { cast<ct>("0.88252766196473234642550148697966907518286784426805211966379117791852765851941326") },
            cast<ct>("0.18923747814892342322840362420574909078935141869643766166662560744765965934000132")
          },
          {
            { cast<ct>("0.6426157582403225481570754970204395359595017363632126959098752082638489654570998") },
            cast<ct>("0.27742918851774302824186387957842919551516576230144702273391786318904795280654668")
          },
          {
            { cast<ct>("0.3573842417596774518429245029795604640404982636367873040901247917361510345429002") },
            cast<ct>("0.27742918851774302824186387957842919551516576230144702273391786318904795280654668")
          }
        });
        break;

      case 10:
      case 11:
        // Symmetric rule: dim = 1, order = 11, npoints = 7
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 11;
        this->reserve(7);
        this->insert(this->end(), {
          {
            { cast<ct>("2.9044439361369887046135229749647638856776643940365931491158222060083122610732645e-121") },
            cast<ct>("0.023809523809523809523809523809523809523809523809523809523809523809523809523809524")
          },
          {
            { cast<ct>("1.0") },
            cast<ct>("0.023809523809523809523809523809523809523809523809523809523809523809523809523809524")
          },
          {
            { cast<ct>("0.084888051860716535063983893016267430206414817564001954204593393983557739913654762") },
            cast<ct>("0.13841302368078291312183988654375518319057773546337726350538849110314057213095192")
          },
          {
            { cast<ct>("0.91511194813928346493601610698373256979358518243599804579540660601644226008634524") },
            cast<ct>("0.13841302368078291312183988654375518319057773546337726350538849110314057213095192")
          },
          {
            { cast<ct>("0.73442439673535710690188594095438316470279873583592237855133472968147776505856385") },
            cast<ct>("0.21587269060493124179487386109983391979141969239353098690323685593696737970421084")
          },
          {
            { cast<ct>("0.26557560326464289309811405904561683529720126416407762144866527031852223494143615") },
            cast<ct>("0.21587269060493124179487386109983391979141969239353098690323685593696737970421084")
          },
          {
            { cast<ct>("0.5") },
            cast<ct>("0.24380952380952380952380952380952380952380952380952380952380952380952380952380952")
          }
        });
        break;

      case 12:
      case 13:
        // Symmetric rule: dim = 1, order = 13, npoints = 8
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 13;
        this->reserve(8);
        this->insert(this->end(), {
          {
            { cast<ct>("1.0") },
            cast<ct>("0.017857142857142857142857142857142857142857142857142857142857142857142857142857143")
          },
          {
            { cast<ct>("1.5490367659397273091272122533145407390280876768195163461951051765377665392390744e-120") },
            cast<ct>("0.017857142857142857142857142857142857142857142857142857142857142857142857142857143")
          },
          {
            { cast<ct>("0.93587007425480330766872288061033171905189033483849167745970764278694949704648427") },
            cast<ct>("0.10535211357175314576394922541796726571492866518999940258920586751713675692384155")
          },
          {
            { cast<ct>("0.06412992574519669233127711938966828094810966516150832254029235721305050295351573") },
            cast<ct>("0.10535211357175314576394922541796726571492866518999940258920586751713675692384155")
          },
          {
            { cast<ct>("0.20414990928342884892774463430102340502714950524133375162887020426492590997543356") },
            cast<ct>("0.17056134624175197097389971116195939722035896371934086114851990439499452261472306")
          },
          {
            { cast<ct>("0.79585009071657115107225536569897659497285049475866624837112979573507409002456644") },
            cast<ct>("0.17056134624175197097389971116195939722035896371934086114851990439499452261472306")
          },
          {
            { cast<ct>("0.3953503910487605656156713698273243723522272974566594505545766538389345381768585") },
            cast<ct>("0.20622939732935124994106639141582694305219456897515418366351474407691288115218689")
          },
          {
            { cast<ct>("0.6046496089512394343843286301726756276477727025433405494454233461610654618231415") },
            cast<ct>("0.20622939732935229005866332917550030797897043822811770829971755732688284592211991")
          }
        });
        break;

      case 14:
      case 15:
        // Symmetric rule: dim = 1, order = 15, npoints = 9
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 15;
        this->reserve(9);
        this->insert(this->end(), {
          {
            { cast<ct>("1.0") },
            cast<ct>("0.013888888888888888888888888888888888888888888888888888888888888888888888888888889")
          },
          {
            { cast<ct>("0.0") },
            cast<ct>("0.013888888888888888888888888888888888888888888888888888888888888888888888888888889")
          },
          {
            { cast<ct>("0.050121002294269921343827377790831020974259852216947788785343665757593362716840641") },
            cast<ct>("0.082747680780402773073751105316201512991101616814082576660015826296450068689249504")
          },
          {
            { cast<ct>("0.94987899770573007865617262220916897902574014778305221121465633424240663728315936") },
            cast<ct>("0.082747680780402994480833130984020944035402231614005421890960557033610814116250393")
          },
          {
            { cast<ct>("0.16140686024463112327705728645432877464448517619304671022951831225145073600767486") },
            cast<ct>("0.13726935625008095931243387019411480150653496460476634115110342761715631877853509")
          },
          {
            { cast<ct>("0.83859313975536887672294271354567122535551482380695328977048168774854926399232514") },
            cast<ct>("0.13726935625008095931243387019411480150653496460476634115110342761715631877853509")
          },
          {
            { cast<ct>("0.68155873191308907935537603435432960651032113880043907516013686538580521381689948") },
            cast<ct>("0.17321425548652318693228609920536808384635652170246821884511716096467384549881737")
          },
          {
            { cast<ct>("0.31844126808691092064462396564567039348967886119956092483986313461419478618310052") },
            cast<ct>("0.17321425548652318693228609920536808384635652170246821884511716096467384549881737")
          },
          {
            { cast<ct>("0.5") },
            cast<ct>("0.18575963718820861678004535147392290249433106575963718820861678004535147392290249")
          }
        });
        break;

      case 16:
      case 17:
        // Symmetric rule: dim = 1, order = 17, npoints = 10
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 17;
        this->reserve(10);
        this->insert(this->end(), {
          {
            { cast<ct>("1.0") },
            cast<ct>("0.011111111111111111111111111111111111111111111111111111111111111111111111111111111")
          },
          {
            { cast<ct>("0.0") },
            cast<ct>("0.011111111111111111111111111111111111111111111111111111111111111111111111111111111")
          },
          {
            { cast<ct>("0.040233045916770593085533669588830932923228462276862064255186927707866279261043359") },
            cast<ct>("0.066652995425534863075630784193850375241641956564746335036768593576001844665516503")
          },
          {
            { cast<ct>("0.95976695408322940691446633041116906707677153772313793574481307229213372073895664") },
            cast<ct>("0.066652995425535087625646201917892305584981774928812663474862548050471112327178157")
          },
          {
            { cast<ct>("0.8693869325527525375015530874299153625080925506884633427325544965275766578699549") },
            cast<ct>("0.11244467103156313983820204848443550284344695661890492074943757684620376025042861")
          },
          {
            { cast<ct>("0.1306130674472474624984469125700846374919074493115366572674455034724233421300451") },
            cast<ct>("0.11244467103156325578659644068438386427296735111429654951540880316172570040116415")
          },
          {
            { cast<ct>("0.26103752509477775216941245363437100105661355333471676554287158015418872445576143") },
            cast<ct>("0.146021341839841703620980033104429862966666022530629839234571586526726187542049")
          },
          {
            { cast<ct>("0.73896247490522224783058754636562899894338644666528323445712841984581127554423857") },
            cast<ct>("0.146021341839841703620980033104429862966666022530629839234571586526726187542049")
          },
          {
            { cast<ct>("0.58263947883319351231310988297908676661557517177474186556644978605239414822720258") },
            cast<ct>("0.16376988059194873434859702465133442858047288472606768660836508312460781325283949")
          },
          {
            { cast<ct>("0.41736052116680648768689011702091323338442482822525813443355021394760585177279742") },
            cast<ct>("0.16376988059194873434859702465133442858047288472606768660836508312460781325283949")
          }
        });
        break;

      case 18:
      case 19:
        // Symmetric rule: dim = 1, order = 19, npoints = 11
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 19;
        this->reserve(11);
        this->insert(this->end(), {
          {
            { cast<ct>("1.0") },
            cast<ct>("0.0090909090909090909090909090909090909090909090909090909090909090909090909090909091")
          },
          {
            { cast<ct>("0.0") },
            cast<ct>("0.0090909090909090909090909090909090909090909090909090909090909090909090909090909091")
          },
          {
            { cast<ct>("0.032999284795970432833862931950308182730041334945018887054186623364321991245191829") },
            cast<ct>("0.054806136633497471801317900644860212100298158617804314340854877550575220266196136")
          },
          {
            { cast<ct>("0.96700071520402956716613706804969181726995866505498111294581337663567800875480817") },
            cast<ct>("0.054806136633497471801317900644860212100298158617804314340854877550575220266196136")
          },
          {
            { cast<ct>("0.8922417368315722093112089080542290517535987275470318108413176703842923560724383") },
            cast<ct>("0.093584940890152526963271742401172078552183181925501762126240497432344287343521481")
          },
          {
            { cast<ct>("0.1077582631684277906887910919457709482464012724529681891586823296157076439275617") },
            cast<ct>("0.093584940890152737716261408330756938994379496657482245528681780758467843767447286")
          },
          {
            { cast<ct>("0.21738233650189749676451801526112416785847392721899151215442137596006120592557845") },
            cast<ct>("0.12402405213201428918043832938996658062426082946785386215043614854608384771532664")
          },
          {
            { cast<ct>("0.78261766349810250323548198473887583214152607278100848784557862403993879407442155") },
            cast<ct>("0.12402405213201428918043832938996658062426082946785386215043614854608384771532664")
          },
          {
            { cast<ct>("0.64787906779346969571595575777952875447050321717430205473394968690080998088822764") },
            cast<ct>("0.1434395623895041888327723915044603555734785596509798429577098328117542773990115")
          },
          {
            { cast<ct>("0.35212093220653030428404424222047124552949678282569794526605031309919001911177236") },
            cast<ct>("0.1434395623895041888327723915044603555734785596509798429577098328117542773990115")
          },
          {
            { cast<ct>("0.5") },
            cast<ct>("0.15010879772784534689296594058498820403582308344213106117868022629927391832153737")
          }
        });
        break;

      case 20:
      case 21:
        // Symmetric rule: dim = 1, order = 21, npoints = 12
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 21;
        this->reserve(12);
        this->insert(this->end(), {
          {
            { cast<ct>("1.7813922808306864054962940913117218498823008283424437981243709530184315201249355e-119") },
            cast<ct>("0.0075757575757575757575757575757575757575757575757575757575757575757575757575757576")
          },
          {
            { cast<ct>("1.0") },
            cast<ct>("0.0075757575757575757575757575757575757575757575757575757575757575757575757575757576")
          },
          {
            { cast<ct>("0.027550363888558888296209930848390643194371724024986338143054051461726038590287014") },
            cast<ct>("0.045842258706597987150369255895642856041700474297961520731518618410094239657166006")
          },
          {
            { cast<ct>("0.97244963611144111170379006915160935680562827597501366185694594853827396140971299") },
            cast<ct>("0.045842258706598004403466859043553160205281593524550338034920813703600405882620944")
          },
          {
            { cast<ct>("0.90963966082200333917432079085845133034523332895182214471165836305843836379558097") },
            cast<ct>("0.078987352782184952003883033002154420258265772926110905763032985201234549820162019")
          },
          {
            { cast<ct>("0.090360339177996660825679209141548669654766671048177855288341636941561636204419029") },
            cast<ct>("0.078987352782185118618075289877922071930378209353989903357774562686850271030410319")
          },
          {
            { cast<ct>("0.81643807651593033883120242722182792912192187270075049648257678232352612100222969") },
            cast<ct>("0.10625420888051057167440930097879047170564084636991167027358058687680869451245948")
          },
          {
            { cast<ct>("0.18356192348406966116879757277817207087807812729924950351742321767647387899777031") },
            cast<ct>("0.10625420888051057167440930097879047170564084636991167027358058687680869451245948")
          },
          {
            { cast<ct>("0.30023452951732553386782510421651654973612598360234648175603116397495187804630761") },
            cast<ct>("0.12563780159960051658273768507558311390700115119665543761211709783294727146574238")
          },
          {
            { cast<ct>("0.69976547048267446613217489578348345026387401639765351824396883602504812195369239") },
            cast<ct>("0.12563780159960051658273768507558311390700115119665543761211709783294727146574238")
          },
          {
            { cast<ct>("0.56827646642746377743203092786984694844920705564102919272579078303352637195100146") },
            cast<ct>("0.13570262045534809060968899117647864021587467296209873692875022471735803566458391")
          },
          {
            { cast<ct>("0.43172353357253622256796907213015305155079294435897080727420921696647362804899854") },
            cast<ct>("0.13570262045534809060968899117647864021587467296209873692875022471735803566458391")
          }
        });
        break;

      case 22:
      case 23:
        // Symmetric rule: dim = 1, order = 23, npoints = 13
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 23;
        this->reserve(13);
        this->insert(this->end(), {
          {
            { cast<ct>("1.0") },
            cast<ct>("0.0064102564102564102564102564102564102564102564102564102564102564102564102564102564")
          },
          {
            { cast<ct>("0.0") },
            cast<ct>("0.0064102564102564102564102564102564102564102564102564102564102564102564102564102564")
          },
          {
            { cast<ct>("0.97665492332108195594845273237772457581325394434868159259468630142544979114936561") },
            cast<ct>("0.03890084337340951352241815224962494681077413819473638123548816575330444020962125")
          },
          {
            { cast<ct>("0.023345076678918044051547267622275424186746055651318407405313698574550208850634391") },
            cast<ct>("0.03890084337340958827601245635130368047541246960728107078202562012408954852923196")
          },
          {
            { cast<ct>("0.07682621767406384156703719645062332021098167014279568715567649366694671496870687") },
            cast<ct>("0.067490963344804068389329028830812788218194446304749061044056595748850318970655831")
          },
          {
            { cast<ct>("0.92317378232593615843296280354937667978901832985720431284432350633305328503129313") },
            cast<ct>("0.067490963344804138899629296170641634769638457402195670327803525806884233732465024")
          },
          {
            { cast<ct>("0.15690576545912128696362048021682222353541190093780778646865432705226567099994053") },
            cast<ct>("0.091823432601774887927675342153912636274232193946170120983119449578393687663433434")
          },
          {
            { cast<ct>("0.84309423454087871303637951978317777646458809906219221353134567294773432900005947") },
            cast<ct>("0.091823432601775283893307461842354964396930922752877454252473741944107532887153298")
          },
          {
            { cast<ct>("0.25854508945433189912653138318153318961390336894070499476113795397559341044635131") },
            cast<ct>("0.11038389678305505624662149411808597154265981025504130388606976001452660861507215")
          },
          {
            { cast<ct>("0.74145491054566810087346861681846681038609663105929500523886204602440658955364869") },
            cast<ct>("0.11038389678305510456208972320121614581445656632530556735686412632624210839359995")
          },
          {
            { cast<ct>("0.62464346505311999628433685018711349074440565624648792964925795431686298139974957") },
            cast<ct>("0.12200789515333806941350911402035708820182923900605690304461379437312662816632981")
          },
          {
            { cast<ct>("0.37535653494688000371566314981288650925559434375351207035074204568313701860025043") },
            cast<ct>("0.12200789515333806941350911402035708820182923900605690304461379437312662816632981")
          },
          {
            { cast<ct>("0.5") },
            cast<ct>("0.12596542466672336802206932077061947191817321687451557581427711297841167971038101")
          }
        });
        break;

      case 24:
      case 25:
        // Symmetric rule: dim = 1, order = 25, npoints = 14
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 25;
        this->reserve(14);
        this->insert(this->end(), {
          {
            { cast<ct>("1.0") },
            cast<ct>("0.0054945054945054945054945054945054945054945054945054945054945054945054945054945055")
          },
          {
            { cast<ct>("5.8088878722739774092270459499295277713553287880731862982316444120166245221465289e-121") },
            cast<ct>("0.0054945054945054945054945054945054945054945054945054945054945054945054945054945055")
          },
          {
            { cast<ct>("0.020032477366369549322449918992287805466804240713676031817920883073986651202524222") },
            cast<ct>("0.033418642248840652170613547289171742789022126291390897223713832662837976245486717")
          },
          {
            { cast<ct>("0.97996752263363045067755008100771219453319575928632396818207911692601334879747578") },
            cast<ct>("0.033418642248840652170613547289171742789022126291390897223713832662837976245486717")
          },
          {
            { cast<ct>("0.93390052691517362550011010145413210662493617654721806737941309205412526682452453") },
            cast<ct>("0.058293327949355712102716628880174315432298769194016860926003940505830168851631169")
          },
          {
            { cast<ct>("0.066099473084826374499889898545867893375063823452781932620586907945874733175475473") },
            cast<ct>("0.058293327949355793606197603546164449411602482213209650461287030701887773047513336")
          },
          {
            { cast<ct>("0.1355657004543369297076637997395592021713302341528390986938780173861806180949423") },
            cast<ct>("0.080010925881476126998558876150658492819234840380772051824924257014647713872311807")
          },
          {
            { cast<ct>("0.8644342995456630702923362002604407978286697658471609013061219826138193819050577") },
            cast<ct>("0.080010925881476126998558876150658492819234840380772051824924257014647713872311807")
          },
          {
            { cast<ct>("0.77531970146432352765831135292954031723106915977695706691189645698401947866161016") },
            cast<ct>("0.097413074686708083448010490106500005223795231410233582403961111613807283703636029")
          },
          {
            { cast<ct>("0.22468029853567647234168864707045968276893084022304293308810354301598052133838984") },
            cast<ct>("0.097413074686708083448010490106500005223795231410233582403961111613807283703636029")
          },
          {
            { cast<ct>("0.32863799332864357747804829817916267758344323292984662672254258356450655316811613") },
            cast<ct>("0.10956312650488523181563875609752739598525296709076088779868455214318409857170817")
          },
          {
            { cast<ct>("0.67136200667135642252195170182083732241655676707015337327745741643549344683188387") },
            cast<ct>("0.10956312650488549380520366045307172466362131717263831908763717562449841970979017")
          },
          {
            { cast<ct>("0.44183406555814806617061164513191991602924547787185961589833756970601418866861007") },
            cast<ct>("0.11580639723422847002261034414019484649029021355396666091858631776516132428765394")
          },
          {
            { cast<ct>("0.55816593444185193382938835486808008397075452212814038410166243029398581133138993") },
            cast<ct>("0.11580639723422853970830305028632762327622095974226633609829079806068788423383185")
          }
        });
        break;

      case 26:
      case 27:
        // Symmetric rule: dim = 1, order = 27, npoints = 15
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 27;
        this->reserve(15);
        this->insert(this->end(), {
          {
            { cast<ct>("1.0") },
            cast<ct>("0.0047619047619047619047619047619047619047619047619047619047619047619047619047619048")
          },
          {
            { cast<ct>("1.7765515409371247576552715530201139100728380543523828095425112493417509996898134e-118") },
            cast<ct>("0.0047619047619047619047619047619047619047619047619047619047619047619047619047619048")
          },
          {
            { cast<ct>("0.98262296325191928639792569603480058885382506799854667003624922921355611860103602") },
            cast<ct>("0.029014946514300627566210209158040127538898746724551365800351125010613691955345044")
          },
          {
            { cast<ct>("0.017377036748080713602074303965199411146174932001453329963750770786443881398963982") },
            cast<ct>("0.029014946514300627566210209158040127538898746724551365800351125010613691955345044")
          },
          {
            { cast<ct>("0.057458977888511850587299184258885174005642957396261013591309184659456002521598411") },
            cast<ct>("0.050830035162858783388039426303021657251687941388942126778143869053515457443250336")
          },
          {
            { cast<ct>("0.94254102211148814941270081574111482599435704260373898640869081534054399747840159") },
            cast<ct>("0.050830035162858993308278213527483786901086869934465046838794064939516058151498784")
          },
          {
            { cast<ct>("0.11824015502409239964794076201185419091131573984235483162264719747646145448032362") },
            cast<ct>("0.070255849901214073389337499642802317166289310851034278351029294197315335443513257")
          },
          {
            { cast<ct>("0.88175984497590760035205923798814580908868426015764516837735280252353854551967638") },
            cast<ct>("0.070255849901214073389337499642802317166289310851034278351029294197315335443513257")
          },
          {
            { cast<ct>("0.19687339726507714443823503068163324641013448312004010715708524801040161014473082") },
            cast<ct>("0.086394823626800364016060766254557225565197127285356595992751149913847783889254595")
          },
          {
            { cast<ct>("0.80312660273492285556176496931836675358986551687995989284291475198959838985526918") },
            cast<ct>("0.08639482362680062998622671825835568869702664765410094182168518362444715482799754")
          },
          {
            { cast<ct>("0.71031902735683624046094846936929020649216910274621518419254668046878453412929316") },
            cast<ct>("0.098493617982306468637021063005936973825102850929208886880952841042589757411796617")
          },
          {
            { cast<ct>("0.28968097264316375953905153063070979350783089725378481580745331953121546587070684") },
            cast<ct>("0.098493617982306738786054330064481595923488685266927618463311651372677929421731707")
          },
          {
            { cast<ct>("0.60767697768189711911283972313645885632607895060152053173725257382085517783335422") },
            cast<ct>("0.1059867929634106089765228761759381798732911730748818676865148423030660515596095")
          },
          {
            { cast<ct>("0.39232302231810288088716027686354114367392104939847946826274742617914482216664578") },
            cast<ct>("0.1059867929634106089765228761759381798732911730748818676865148423030660515596095")
          },
          {
            { cast<ct>("0.5") },
            cast<ct>("0.10852405817440782475747510712545677580642615607650572685537720502755467790432825")
          }
        });
        break;

      case 28:
      case 29:
        // Symmetric rule: dim = 1, order = 29, npoints = 16
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 29;
        this->reserve(16);
        this->insert(this->end(), {
          {
            { cast<ct>("1.7174945142356726539947965858624970443973922116736387488438228644862486503813237e-118") },
            cast<ct>("0.0041666666666666666666666666666666666666666666666666666666666666666666666666666667")
          },
          {
            { cast<ct>("1.0") },
            cast<ct>("0.0041666666666666666666666666666666666666666666666666666666666666666666666666666667")
          },
          {
            { cast<ct>("0.98478402313510896647612136918372962069449537325191736503433936614127052592698838") },
            cast<ct>("0.025425180502960000130939996063098409507917757168586674497651916448763107026271266")
          },
          {
            { cast<ct>("0.015215976864891033523878630816270379305504626748082634965660633858729474073011622") },
            cast<ct>("0.025425180502960000130939996063098409507917757168586674497651916448763107026271266")
          },
          {
            { cast<ct>("0.050399733453263953502685869240075261625001195477427787287786294105761801408571542") },
            cast<ct>("0.044696848662965403608075123952121817437638490691061728518428027592307821567015195")
          },
          {
            { cast<ct>("0.94960026654673604649731413075992473837499880452257221271221370589423819859142846") },
            cast<ct>("0.044696848662965403608075123952121817437638490691061728518428027592307821567015195")
          },
          {
            { cast<ct>("0.1039958540690924680344558645184271470959630860099004886577946750670018549860025") },
            cast<ct>("0.062127691066257000907451357515711699257650127797662522340751910029946888293912553")
          },
          {
            { cast<ct>("0.8960041459309075319655441354815728529040369139900995113422053249329981450139975") },
            cast<ct>("0.062127691066257136809995000568646771792067244284165105219326243640814988655458532")
          },
          {
            { cast<ct>("0.82619435144124654473394160982029074016077900641478716869289064211111852154021417") },
            cast<ct>("0.077013490403581953411454535660403612696809543713168907838109543004734082304888695")
          },
          {
            { cast<ct>("0.17380564855875345526605839017970925983922099358521283130710935788888147845978583") },
            cast<ct>("0.077013490403582158713761495440725599121657758183152503442251988352238594847045414")
          },
          {
            { cast<ct>("0.74302971094356880589094539292343734844448865214912628568832843380339224871676121") },
            cast<ct>("0.088745956695852215209338686912358560819308071910181995412004167795730426606396499")
          },
          {
            { cast<ct>("0.25697028905643119410905460707656265155551134785087371431167156619660775128323879") },
            cast<ct>("0.088745956695852215209338686912358560819308071910181995412004167795730426606396499")
          },
          {
            { cast<ct>("0.3500847655496183959508232726388496760922695115461111676728449511779795615144536") },
            cast<ct>("0.096845011912601877527507979809228982022993802592272328102355303121858065511620114")
          },
          {
            { cast<ct>("0.64991523445038160404917672736115032390773048845388883232715504882202043848554639") },
            cast<ct>("0.096845011912601877527507979809228982022993802592272328102355303121858065511620114")
          },
          {
            { cast<ct>("0.44933686323902527607848349747704111873337954279990443004122489987284604131021092") },
            cast<ct>("0.10097915408911483561476292309612181525736844095279870017714045006348760593767546")
          },
          {
            { cast<ct>("0.55066313676097472392151650252295888126662045720009556995877510012715395868978908") },
            cast<ct>("0.10097915408911510049836127312307008627208316234568113825695920018002266828764742")
          }
        });
        break;

      case 30:
      case 31:
        // Symmetric rule: dim = 1, order = 31, npoints = 17
        // Source:
        // Generated by maxima script gausslobatto.mac
        this->delivered_order = 31;
        this->reserve(17);
        this->insert(this->end(), {
          {
            { cast<ct>("1.0") },
            cast<ct>("0.0036764705882352941176470588235294117647058823529411764705882352941176470588235294")
          },
          {
            { cast<ct>("0.0") },
            cast<ct>("0.0036764705882352941176470588235294117647058823529411764705882352941176470588235294")
          },
          {
            { cast<ct>("0.98656608831570915707848975093686071529447957456125474322324592154803906873320582") },
            cast<ct>("0.022460970271627122201788742779483538793417522833911910534784489184182748840004519")
          },
          {
            { cast<ct>("0.013433911684290842921510249063139284705520425438745256776754078451960931266794184") },
            cast<ct>("0.022460970271627122201788742779483538793417522833911910534784489184182748840004519")
          },
          {
            { cast<ct>("0.044560002042213202188098746801136766234560274065633617839093720344516669963665418") },
            cast<ct>("0.039599135251843477580522855723701030434914898333609280355193210991990687084375379")
          },
          {
            { cast<ct>("0.95543999795778679781190125319886323376543972593436638216090627965548333003633458") },
            cast<ct>("0.039599135251843613066735544645425867256951639520498561288040512342552611291384887")
          },
          {
            { cast<ct>("0.092151874389114846446624723381236672641798801466438220925068019206579760206999411") },
            cast<ct>("0.055296454503514101020361702921382696707176374060837129648771054729621334424024085")
          },
          {
            { cast<ct>("0.90784812561088515355337527661876332735820119853356177907493198079342023979300059") },
            cast<ct>("0.055296454503514101020361702921382696707176374060837129648771054729621334424024085")
          },
          {
            { cast<ct>("0.15448550968615764730254032131377335159679346890479228579630095138098097760828585") },
            cast<ct>("0.068993873100963330458807000388643743091625727258005451700157601214112447877415075")
          },
          {
            { cast<ct>("0.84551449031384235269745967868622664840320653109520771420369904861901902239171415") },
            cast<ct>("0.068993873100963330458807000388643743091625727258005451700157601214112447877415075")
          },
          {
            { cast<ct>("0.22930730033494923043813329624796837416242667601758442733952729427282001290632589") },
            cast<ct>("0.080197330998810717271604998329741220416362128739206300791311720397293981651678616")
          },
          {
            { cast<ct>("0.77069269966505076956186670375203162583757332398241557266047270572717998709367411") },
            cast<ct>("0.080197330998810788216937439480117639274497386131032478495489417780478690083001414")
          },
          {
            { cast<ct>("0.31391278321726147904638265963237109372009134279985971326744832821001463805807869") },
            cast<ct>("0.088502126757828961352223525111859410772614419643042232318681440230765681163526163")
          },
          {
            { cast<ct>("0.68608721678273852095361734036762890627990865720014028673255167178998536194192131") },
            cast<ct>("0.088502126757828961352223525111859410772614419643042232318681440230765681163526163")
          },
          {
            { cast<ct>("0.59475598675915869415213150737655698567249621146124928528893563558383989596075771") },
            cast<ct>("0.09360816983880938635940242790916881385197052498183308417216218607377116989021462")
          },
          {
            { cast<ct>("0.40524401324084130584786849262344301432750378853875071471106436441616010403924229") },
            cast<ct>("0.09360816983880971983574895790606473651676033902892232783581098232242034176544861")
          },
          {
            { cast<ct>("0.5") },
            cast<ct>("0.095330937376734695920496387860999573184935338371363077518584272714878416514213085")
          }
        });
        break;

      default:
        DUNE_THROW(QuadratureOrderOutOfRange,
                  "QuadratureRule for order " << order << " and GeometryType "
                                              << this->type() << " not available");
    }
  }

} // end namespace Dune

#endif // DUNE_GEOMETRY_QUADRATURE_GAUSSLOBATTO_HH
